const express = require('express')
const {open} = require('sqlite')
const sqlite3 = require('sqlite3')
const path = require('path')

const databasePath = path.join(__dirname, 'covid19India.db')
const app = express()
module.exports = app
app.use(express.json())

let db = null

const initializeDBAndServer = async () => {
  try {
    db = await open({
      filename: databasePath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () =>
      console.log('Server Running at http://localhost:3000/'),
    )
  } catch (e) {
    console.log(`DB Error: ${e.message}`)
    process.exit(1)
  }
}

initializeDBAndServer()

const convertStateObjectToResponseObject = dbObject => {
  return {
    stateId: dbObject.state_id,
    stateName: dbObject.state_name,
    population: dbObject.population,
  }
}
const convertDistrictObjectToResponseObject = dbObject => {
  return {
    districtId: dbObject.district_id,
    districtName: dbObject.district_name,
    stateId: dbObject.state_id,
    cases: dbObject.cases,
    cured: dbObject.cured,
    active: dbObject.active,
    deaths: dbObject.deaths,
  }
}

//API-1
app.get('/states/', async (request, response) => {
  const getStateQuery = `
 SELECT
 *
 FROM
 state;`
  const stateArray = await db.all(getStateQuery)
  response.send(
    stateArray.map(each => convertStateObjectToResponseObject(each)),
  )
})

//API-2

app.get('/states/:stateId/', async (request, response) => {
  const {stateId} = request.params
  const getStateQuery = `
    SELECT
      *
    FROM
      state
      WHERE
      state_id = ${stateId};`
  const state = await db.get(getStateQuery)
  response.send(convertStateObjectToResponseObject(state))
})

//API-3
app.post('/districts/', async (request, response) => {
  const {districtName, stateId, cases, cured, active, deaths} = request.body

  const postDistrictQuery = `
    INSERT INTO
      district (district_name,state_id,cases,cured,active,deaths)

      VALUES ('${districtName}', ${stateId}, ${cases},${cured},${active},${deaths});`

  const disrtict = await db.run(postDistrictQuery)

  response.send('District Successfully Added')
})
//API-4
app.get('/districts/:districtId/', async (request, response) => {
  const {districtId} = request.params
  const getDistrictQuery = `
    SELECT
      *
    FROM
      district
      WHERE
      district_id = ${districtId};`
  const district = await db.get(getDistrictQuery)
  response.send(convertDistrictObjectToResponseObject(district))
})
//API-5

app.delete('/districts/:districtId/', async (request, response) => {
  const {districtId} = request.params

  const deleteDistrictQuery = `
    DELETE FROM
      district
    WHERE
      district_id = ${districtId};`

  const districtDEl = await db.run(deleteDistrictQuery)

  response.send('District Removed')
})

//API-6

app.put('/districts/:districtId/', async (request, response) => {
  const {districtName, stateId, cases, cured, active, deaths} = request.body
  const {districtId} = request.params
  const updatedistrictQuery = `
    UPDATE
      district
      SET
      district_name = '${districtName}',
  state_id= ${stateId},
  cases = ${cases},
  cured=${cured},
  active = ${active},
  deaths = ${deaths}
      WHERE
      district_id=${districtId};`

  const player = await db.run(updatedistrictQuery)

  response.send('District Details Updated')
})

//API-7

app.get('/states/:stateId/stats/', async (request, response) => {
  const {stateId} = request.params
  const getStateStatsQuery = `
    SELECT
      SUM(cases) as totalCases,
      SUM(cured) as totalCured,
      SUM(active)as totalActive,
      SUM(deaths) as totalDeaths
    FROM
      district
      WHERE
      state_id = ${stateId};`

  const statsArray = await db.get(getStateStatsQuery)

  response.send(statsArray)
})

//API-8
app.get('/districts/:districtId/details/', async (request, response) => {
  const {districtId} = request.params
  const getDistrictIdQuery = `
    SELECT 
    state_id 
    FROM 
    district
    WHERE
    district_id = ${districtId};`
  const getDistrictIdQueryResponse = await db.get(getDistrictIdQuery)

  const getStateNameQuery = `
    SELECT
    state_name as stateName 
    FROM
    state
    WHERE
    state_id = ${getDistrictIdQueryResponse.state_id};`
  const getStateNameQueryResponse = await db.get(getStateNameQuery)
  response.send(getStateNameQueryResponse)
})
